"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
const inversify_1 = require("inversify");
const types_1 = require("./src/types");
const bot_1 = require("./src/bot");
const discord_js_1 = require("discord.js");
const message_responder_1 = require("./src/services/message-responder");
const task_scheduler_1 = require("./src/services/task-scheduler");
const ping_finder_1 = require("./src/services/ping-finder");
const server_finder_1 = require("./src/services/server-finder");
const warclock_finder_1 = require("./src/services/warclock-finder");
const warclock_responder_1 = require("./src/services/warclock-responder");
const warclock_scheduler_1 = require("./src/services/warclock-scheduler");
const warclock_database_1 = require("./src/data_access/warclock-database");
const database_access_1 = require("./src/data_access/database-access");
const firebase_connection_1 = require("./src/data_access/firebase-connection");
const me_finder_1 = require("./src/services/me-finder");
let container = new inversify_1.Container();
container.bind(types_1.TYPES.Bot).to(bot_1.Bot).inSingletonScope();
container.bind(types_1.TYPES.Client).toConstantValue(new discord_js_1.Client());
container.bind(types_1.TYPES.Token).toConstantValue(process.env.TOKEN);
container.bind(types_1.TYPES.MessageResponder).to(message_responder_1.MessageResponder).inSingletonScope();
container.bind(types_1.TYPES.PingFinder).to(ping_finder_1.PingFinder).inSingletonScope();
container.bind(types_1.TYPES.ServerFinder).to(server_finder_1.ServerFinder).inSingletonScope();
container.bind(types_1.TYPES.WarclockFinder).to(warclock_finder_1.WarclockFinder).inSingletonScope();
container.bind(types_1.TYPES.WarclockResponder).to(warclock_responder_1.WarclockResponder);
container.bind(types_1.TYPES.WarclockDatabase).to(warclock_database_1.WarclockDatabase);
container.bind(types_1.TYPES.DatabaseAccess).to(database_access_1.DatabaseAccess);
container.bind(types_1.TYPES.FirebaseConnection).to(firebase_connection_1.FirebaseConnection);
container.bind(types_1.TYPES.TaskScheduler).to(task_scheduler_1.TaskScheduler).inSingletonScope();
container.bind(types_1.TYPES.WarclockScheduler).to(warclock_scheduler_1.WarclockScheduler);
container.bind(types_1.TYPES.MeFinder).to(me_finder_1.MeFinder);
container.bind(types_1.TYPES.GoogleAppCred).toConstantValue(process.env.GOOGLE_APPLICATION_CREDENTIALS);
container.bind(types_1.TYPES.DatabaseURL).toConstantValue(process.env.DATABASE_URL);
exports.default = container;
//# sourceMappingURL=inversify.config.js.map